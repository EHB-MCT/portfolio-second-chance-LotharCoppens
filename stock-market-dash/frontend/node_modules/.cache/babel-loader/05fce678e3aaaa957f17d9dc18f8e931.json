{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/usr/src/app/frontend/src/components/RealTimeStocks.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Paper, Typography, TextField, Button } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nvar RealTimeStocks = function RealTimeStocks() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    realTimeData = _useState2[0],\n    setRealTimeData = _useState2[1];\n  var _useState3 = useState('MSFT'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    symbol = _useState4[0],\n    setSymbol = _useState4[1]; // Default stock symbol is MSFT\n  var handleSymbolChange = function handleSymbolChange(event) {\n    setSymbol(event.target.value);\n  };\n  var fetchStockData = function fetchStockData() {\n    // Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\n    var apiKey = 'QQ0OM443G5VF3246';\n\n    // Fetch real-time stock data from the Alpha Vantage API for the latest 30 minutes\n    axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(symbol, \"&interval=1min&apikey=\").concat(apiKey)).then(function (response) {\n      var timeSeries = response.data['Time Series (1min)'];\n      if (timeSeries) {\n        // Convert the fetched data into an array of objects for the latest 10 minutes\n        var timestamps = Object.keys(timeSeries).slice(0, 10); // Get the latest 10 timestamps\n        var stockData = timestamps.map(function (timestamp) {\n          return {\n            timestamp: timestamp,\n            price: parseFloat(timeSeries[timestamp]['1. open']) // Convert price to a number\n          };\n        });\n\n        setRealTimeData(stockData);\n      } else {\n        setRealTimeData([]);\n      }\n    }).catch(function (error) {\n      console.error(error);\n      setRealTimeData([]);\n    });\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: {\n      padding: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Real-Time Stock Prices\"), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter Stock Symbol\",\n    value: symbol,\n    onChange: handleSymbolChange,\n    style: {\n      marginTop: '10px',\n      marginBottom: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: fetchStockData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Watch Stock\"), realTimeData.length > 0 && /*#__PURE__*/React.createElement(LineChart, {\n    width: 600,\n    height: 300,\n    data: realTimeData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"timestamp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"price\",\n    stroke: \"#8884d8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n};\nexport default RealTimeStocks;","map":{"version":3,"names":["React","useState","useEffect","axios","Paper","Typography","TextField","Button","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","RealTimeStocks","_useState","_useState2","_slicedToArray","realTimeData","setRealTimeData","_useState3","_useState4","symbol","setSymbol","handleSymbolChange","event","target","value","fetchStockData","apiKey","get","concat","then","response","timeSeries","data","timestamps","Object","keys","slice","stockData","map","timestamp","price","parseFloat","catch","error","console","createElement","elevation","style","padding","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","label","onChange","marginTop","marginBottom","onClick","length","width","height","dataKey","strokeDasharray","type","stroke"],"sources":["/usr/src/app/frontend/src/components/RealTimeStocks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Paper, Typography, TextField, Button } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst RealTimeStocks = () => {\n  const [realTimeData, setRealTimeData] = useState([]);\n  const [symbol, setSymbol] = useState('MSFT'); // Default stock symbol is MSFT\n\n  const handleSymbolChange = event => {\n    setSymbol(event.target.value);\n  };\n\n  const fetchStockData = () => {\n    // Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\n    const apiKey = 'QQ0OM443G5VF3246';\n\n    // Fetch real-time stock data from the Alpha Vantage API for the latest 30 minutes\n    axios\n      .get(\n        `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=1min&apikey=${apiKey}`\n      )\n      .then(response => {\n        const timeSeries = response.data['Time Series (1min)'];\n\n        if (timeSeries) {\n          // Convert the fetched data into an array of objects for the latest 10 minutes\n          const timestamps = Object.keys(timeSeries).slice(0, 10); // Get the latest 10 timestamps\n          const stockData = timestamps.map(timestamp => ({\n            timestamp,\n            price: parseFloat(timeSeries[timestamp]['1. open']), // Convert price to a number\n          }));\n\n          setRealTimeData(stockData);\n        } else {\n          setRealTimeData([]);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        setRealTimeData([]);\n      });\n  };\n\n  return (\n    <Paper elevation={3} style={{ padding: '20px' }}>\n      <Typography variant=\"h5\">Real-Time Stock Prices</Typography>\n      <TextField\n        label=\"Enter Stock Symbol\"\n        value={symbol}\n        onChange={handleSymbolChange}\n        style={{ marginTop: '10px', marginBottom: '10px' }}\n      />\n      <Button variant=\"contained\" onClick={fetchStockData}>\n        Watch Stock\n      </Button>\n      {realTimeData.length > 0 && (\n        <LineChart width={600} height={300} data={realTimeData}>\n          <XAxis dataKey=\"timestamp\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n        </LineChart>\n      )}\n    </Paper>\n  );\n};\n\nexport default RealTimeStocks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}