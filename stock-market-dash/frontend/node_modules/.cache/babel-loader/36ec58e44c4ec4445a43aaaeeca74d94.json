{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/usr/src/app/frontend/src/components/RealTimeStocks.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Paper, Typography } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nvar RealTimeStocks = function RealTimeStocks() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    realTimeData = _useState2[0],\n    setRealTimeData = _useState2[1];\n  useEffect(function () {\n    // Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\n    var apiKey = 'QQ0OM443G5VF3246';\n\n    // Fetch real-time stock data from the Alpha Vantage API\n    axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=5min&apikey=\".concat(apiKey)).then(function (response) {\n      var timeSeries = response.data['Time Series (5min)'];\n\n      // Convert the fetched data into an array of objects\n      var stockData = Object.keys(timeSeries).map(function (timestamp) {\n        return {\n          timestamp: timestamp,\n          price: parseFloat(timeSeries[timestamp]['1. open'])\n        };\n      });\n      setRealTimeData(stockData);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  var chartData = {\n    labels: realTimeData.map(function (stock) {\n      return stock.timestamp;\n    }),\n    datasets: [{\n      label: 'Stock Price',\n      data: realTimeData.map(function (stock) {\n        return stock.price;\n      }),\n      fill: false,\n      borderColor: 'rgba(75,192,192,1)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: {\n      padding: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Real-Time Stock Prices\"), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\nexport default RealTimeStocks;","map":{"version":3,"names":["React","useState","useEffect","axios","Paper","Typography","Line","RealTimeStocks","_useState","_useState2","_slicedToArray","realTimeData","setRealTimeData","apiKey","get","concat","then","response","timeSeries","data","stockData","Object","keys","map","timestamp","price","parseFloat","catch","error","console","chartData","labels","stock","datasets","label","fill","borderColor","tension","createElement","elevation","style","padding","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant"],"sources":["/usr/src/app/frontend/src/components/RealTimeStocks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Paper, Typography } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\n\nconst RealTimeStocks = () => {\n  const [realTimeData, setRealTimeData] = useState([]);\n\n  useEffect(() => {\n    // Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\n    const apiKey = 'QQ0OM443G5VF3246';\n\n    // Fetch real-time stock data from the Alpha Vantage API\n    axios\n      .get(\n        `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=5min&apikey=${apiKey}`\n      )\n      .then(response => {\n        const timeSeries = response.data['Time Series (5min)'];\n\n        // Convert the fetched data into an array of objects\n        const stockData = Object.keys(timeSeries).map(timestamp => ({\n          timestamp,\n          price: parseFloat(timeSeries[timestamp]['1. open']),\n        }));\n\n        setRealTimeData(stockData);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  const chartData = {\n    labels: realTimeData.map(stock => stock.timestamp),\n    datasets: [\n      {\n        label: 'Stock Price',\n        data: realTimeData.map(stock => stock.price),\n        fill: false,\n        borderColor: 'rgba(75,192,192,1)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  return (\n    <Paper elevation={3} style={{ padding: '20px' }}>\n      <Typography variant=\"h5\">Real-Time Stock Prices</Typography>\n      <Line data={chartData} />\n    </Paper>\n  );\n};\n\nexport default RealTimeStocks;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACjD,SAASC,IAAI,QAAQ,iBAAiB;AAEtC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAAA,IAAAC,SAAA,GACaP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpCP,SAAS,CAAC,YAAM;IACd;IACA,IAAMW,MAAM,GAAG,kBAAkB;;IAEjC;IACAV,KAAK,CACFW,GAAG,qGAAAC,MAAA,CACkGF,MAAM,CAC5G,CAAC,CACAG,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChB,IAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI,CAAC,oBAAoB,CAAC;;MAEtD;MACA,IAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC,CAACK,GAAG,CAAC,UAAAC,SAAS;QAAA,OAAK;UAC1DA,SAAS,EAATA,SAAS;UACTC,KAAK,EAAEC,UAAU,CAACR,UAAU,CAACM,SAAS,CAAC,CAAC,SAAS,CAAC;QACpD,CAAC;MAAA,CAAC,CAAC;MAEHZ,eAAe,CAACQ,SAAS,CAAC;IAC5B,CAAC,CAAC,CACDO,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAME,SAAS,GAAG;IAChBC,MAAM,EAAEpB,YAAY,CAACY,GAAG,CAAC,UAAAS,KAAK;MAAA,OAAIA,KAAK,CAACR,SAAS;IAAA,EAAC;IAClDS,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBf,IAAI,EAAER,YAAY,CAACY,GAAG,CAAC,UAAAS,KAAK;QAAA,OAAIA,KAAK,CAACP,KAAK;MAAA,EAAC;MAC5CU,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,oBAAoB;MACjCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,oBACErC,KAAA,CAAAsC,aAAA,CAAClC,KAAK;IAACmC,SAAS,EAAE,CAAE;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9ChD,KAAA,CAAAsC,aAAA,CAACjC,UAAU;IAAC4C,OAAO,EAAC,IAAI;IAAAP,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAAkC,CAAC,eAC5DhD,KAAA,CAAAsC,aAAA,CAAChC,IAAI;IAACa,IAAI,EAAEW,SAAU;IAAAY,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACnB,CAAC;AAEZ,CAAC;AAED,eAAezC,cAAc"},"metadata":{},"sourceType":"module"}