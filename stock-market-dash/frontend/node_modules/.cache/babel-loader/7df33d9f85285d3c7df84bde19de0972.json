{"ast":null,"code":"import _slicedToArray from \"/usr/src/app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/usr/src/app/frontend/src/components/RealTimeStocks.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Paper, Typography, List, ListItem, ListItemText, TextField, Button } from '@mui/material';\nvar RealTimeStocks = function RealTimeStocks() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    realTimeData = _useState2[0],\n    setRealTimeData = _useState2[1];\n  var _useState3 = useState('MSFT'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    symbol = _useState4[0],\n    setSymbol = _useState4[1]; // Default stock symbol is MSFT\n  var handleSymbolChange = function handleSymbolChange(event) {\n    setSymbol(event.target.value);\n  };\n  var fetchStockData = function fetchStockData() {\n    // Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\n    var apiKey = 'YOUR_API_KEY';\n\n    // Fetch real-time stock data from the Alpha Vantage API\n    axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(symbol, \"&interval=1min&apikey=\").concat(apiKey)).then(function (response) {\n      var timeSeries = response.data['Time Series (1min)'];\n\n      // Extract the latest 10 minutes of stock data\n      var currentTime = new Date();\n      var tenMinutesAgo = new Date(currentTime.getTime() - 10 * 60 * 1000);\n      var stockData = Object.keys(timeSeries).filter(function (timestamp) {\n        return new Date(timestamp) >= tenMinutesAgo;\n      }).map(function (timestamp) {\n        return {\n          timestamp: timestamp,\n          price: timeSeries[timestamp]['1. open']\n        };\n      });\n      setRealTimeData(stockData);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n  useEffect(function () {\n    fetchStockData();\n  }, [symbol]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: {\n      padding: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Real-Time Stock Prices (Last 10 Minutes)\"), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Enter Stock Symbol\",\n    value: symbol,\n    onChange: handleSymbolChange,\n    style: {\n      marginTop: '10px',\n      marginBottom: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: fetchStockData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Watch Stock\"), /*#__PURE__*/React.createElement(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, realTimeData.map(function (stock, index) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"\".concat(stock.timestamp, \":\"),\n      secondary: \"$\".concat(stock.price),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\nexport default RealTimeStocks;","map":{"version":3,"names":["React","useState","useEffect","axios","Paper","Typography","List","ListItem","ListItemText","TextField","Button","RealTimeStocks","_useState","_useState2","_slicedToArray","realTimeData","setRealTimeData","_useState3","_useState4","symbol","setSymbol","handleSymbolChange","event","target","value","fetchStockData","apiKey","get","concat","then","response","timeSeries","data","currentTime","Date","tenMinutesAgo","getTime","stockData","Object","keys","filter","timestamp","map","price","catch","error","console","createElement","elevation","style","padding","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","label","onChange","marginTop","marginBottom","onClick","stock","index","key","primary","secondary"],"sources":["/usr/src/app/frontend/src/components/RealTimeStocks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Paper, Typography, List, ListItem, ListItemText, TextField, Button } from '@mui/material';\n\nconst RealTimeStocks = () => {\n  const [realTimeData, setRealTimeData] = useState([]);\n  const [symbol, setSymbol] = useState('MSFT'); // Default stock symbol is MSFT\n\n  const handleSymbolChange = event => {\n    setSymbol(event.target.value);\n  };\n\n  const fetchStockData = () => {\n    // Replace 'YOUR_API_KEY' with your actual Alpha Vantage API key\n    const apiKey = 'YOUR_API_KEY';\n\n    // Fetch real-time stock data from the Alpha Vantage API\n    axios\n      .get(\n        `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=1min&apikey=${apiKey}`\n      )\n      .then(response => {\n        const timeSeries = response.data['Time Series (1min)'];\n\n        // Extract the latest 10 minutes of stock data\n        const currentTime = new Date();\n        const tenMinutesAgo = new Date(currentTime.getTime() - 10 * 60 * 1000);\n\n        const stockData = Object.keys(timeSeries)\n          .filter(timestamp => new Date(timestamp) >= tenMinutesAgo)\n          .map(timestamp => ({\n            timestamp,\n            price: timeSeries[timestamp]['1. open'],\n          }));\n\n        setRealTimeData(stockData);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    fetchStockData();\n  }, [symbol]);\n\n  return (\n    <Paper elevation={3} style={{ padding: '20px' }}>\n      <Typography variant=\"h5\">Real-Time Stock Prices (Last 10 Minutes)</Typography>\n      <TextField\n        label=\"Enter Stock Symbol\"\n        value={symbol}\n        onChange={handleSymbolChange}\n        style={{ marginTop: '10px', marginBottom: '10px' }}\n      />\n      <Button variant=\"contained\" onClick={fetchStockData}>\n        Watch Stock\n      </Button>\n      <List>\n        {realTimeData.map((stock, index) => (\n          <ListItem key={index}>\n            <ListItemText\n              primary={`${stock.timestamp}:`}\n              secondary={`$${stock.price}`}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default RealTimeStocks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}